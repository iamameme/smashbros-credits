{"version":3,"sources":["3d/Stars.js","images/earth.jpg","images/moon.png","3d/Planets.js","3d/Effects.js","audio/laser.mp3","audio/engine.mp3","audio/engine2.mp3","audio/bg.mp3","audio/warp.mp3","audio/click.mp3","audio/explosion.mp3","audio/index.js","store.js","3d/Particles.js","3d/Enemies.js","3d/Rings.js","3d/Track.js","3d/Text.js","3d/Ship.js","3d/Rig.js","WebGl.js","Hud.js","App.js","index.js"],"names":["Stars","count","positions","useMemo","i","r","theta","Math","PI","random","phi","acos","x","cos","sin","y","z","push","Float32Array","attachObject","length","array","itemSize","size","sizeAttenuation","color","fog","Planets","ref","useRef","useLoader","THREE","earthImg","moonImg","texture","moon","scale","position","args","map","roughness","distance","intensity","Effects","composer","useThree","scene","gl","camera","useEffect","current","setSize","width","height","useFrame","render","attachArray","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","FilmPass","mp3","explosion","explosionAudio","zap","Audio","zapAudio","engine","engineAudio","engine2","engine2Audio","bg","bgAudio","warp","warpAudio","click","clickAudio","CustomSinCurve","angle","t","optionalTarget","tx","ty","tz","axis","this","set","applyAxisAngle","multiplyScalar","guid","text2","text3","text4","text5","useStore","create","get","spline","Curves","GrannyKnot","track","cancelLaserTO","undefined","cancelExplosionTO","track2","track3","track4","track5","hardMode","localStorage","getItem","text6","sound","texts","concat","trackNo","floor","index","isHit","text","hit","rocks","randomRocks","enemies","randomData","points","textsHit","health","lasers","explosions","mutation","startTime","Date","now","fov","hits","rings","randomRings","particles","looptime","binormal","normal","clock","mouse","dummy","ray","box","actions","reset","init","start","toggleSound","addEffect","time","parameters","path","getPointAt","warping","playAudio","audio","filter","test","a","previous","updates","data","state","clearTimeout","setTimeout","indexes","rock","indexOf","shoot","updateMouse","clientX","clientY","window","innerWidth","innerHeight","setBox","posi","setPosi","result","intersectBox","origin","distanceTo","radius","Array","fill","rand","pos","offset","clone","add","speed","temp","pickt","tangents","pick","lookAt","getLength","matrix","binormals","toArray","volume","loop","getState","currentTime","play","pause","Particles","instancedMesh","forEach","particle","copy","rotation","updateMatrix","setMatrixAt","instanceMatrix","needsUpdate","frustumCulled","setFromCenterAndSize","geometry","material","side","Rings","f","onUpdate","self","quaternion","setFromRotationMatrix","Track","lightgreen","hotpink","crossMaterial","Texts","GLTFLoader","Text","posit","React","memo","nodes","materials","abs","test2","TextSprite","alignment","fontFamily","fontSize","join","xPos","yPos","point","visible","setFromObject","name","renderOrder","object","laserMaterial","direction","Ship","main","laserGroup","laserLight","cross","target","getElapsedTime","children","getWorldPosition","getWorldDirection","negate","fontStyle","Rig","group","rig","segments","pickNext","subVectors","dir","getTangentAt","max","updateProjectionMatrix","lightPos","WebGL","canvas","document","createElement","WebGLRenderingContext","getContext","e","WebGL2RenderingContext","getErrorMessage","version","contexts","message","element","id","style","fontWeight","textAlign","background","padding","margin","replace","innerHTML","Hud","toggle","useState","mid","setMid","scoreData","setName","minScore","setInterval","clearInterval","score","toFixed","warning","WebGl","isWebGLAvailable","getStyle","UpperLeft","onClick","currentMode","setItem","location","reload","cursor","UpperRight","href","Middle","className","Middle2","lineHeight","display","defaultValue","maxLength","onChange","value","toUpperCase","marginTop","MiddleUpper","LowerLeft","MiddleLower","Global","LowerRight","base","css","styled","div","createGlobalStyle","App","backgroundStyle","setStyle","onPointerMove","linear","mode","dpr","antialias","near","far","onCreated","toneMapping","setClearColor","fallback","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b7186e70.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\n\nexport default function Stars({ count = 2000 }) {\n  const positions = useMemo(() => {\n    let positions = []\n    for (let i = 0; i < count; i++) {\n      const r = 4000\n      const theta = 2 * Math.PI * Math.random()\n      const phi = Math.acos(2 * Math.random() - 1)\n      const x = r * Math.cos(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\n      const y = r * Math.sin(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\n      const z = r * Math.cos(phi) + (-1000 + Math.random() * 2000)\n      positions.push(x)\n      positions.push(y)\n      positions.push(z)\n    }\n    return new Float32Array(positions)\n  }, [count])\n  return (\n    <points>\n      <bufferGeometry>\n        <bufferAttribute attachObject={['attributes', 'position']} count={positions.length / 3} array={positions} itemSize={3} />\n      </bufferGeometry>\n      <pointsMaterial size={15} sizeAttenuation color=\"white\" fog={false} />\n    </points>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/earth.45ed3b77.jpg\";","export default __webpack_public_path__ + \"static/media/moon.27019542.png\";","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader } from '@react-three/fiber'\nimport earthImg from '../images/earth.jpg'\nimport moonImg from '../images/moon.png'\n\nexport default function Planets() {\n  const ref = useRef()\n  const [texture, moon] = useLoader(THREE.TextureLoader, [earthImg, moonImg])\n  return (\n    <group ref={ref} scale={[100, 100, 100]} position={[-500, -500, 1000]}>\n      <mesh>\n        <sphereGeometry args={[5, 32, 32]} />\n        <meshStandardMaterial map={texture} roughness={1} fog={false} />\n      </mesh>\n      <mesh position={[5, -5, -5]}>\n        <sphereGeometry args={[0.75, 32, 32]} />\n        <meshStandardMaterial roughness={1} map={moon} fog={false} />\n      </mesh>\n      <pointLight position={[-5, -5, -5]} distance={1000} intensity={6} />\n      <mesh position={[-30, -10, -60]}>\n        <sphereGeometry args={[4, 32, 32]} />\n        <meshBasicMaterial color=\"#FFFF99\" fog={false} />\n        <pointLight distance={6100} intensity={50} color=\"white\" />\n      </mesh>\n    </group>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport { extend, useThree, useFrame } from '@react-three/fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass'\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass, FilmPass })\n\nexport default function Effects() {\n  const composer = useRef()\n  const { scene, gl, size, camera } = useThree()\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame(() => composer.current.render(), 2)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      {/*<unrealBloomPass attachArray=\"passes\" args={[undefined, 1.8, 1, 0]} />*/}\n    </effectComposer>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/laser.373d639d.mp3\";","export default __webpack_public_path__ + \"static/media/engine.75bbe12e.mp3\";","export default __webpack_public_path__ + \"static/media/engine2.87c3c40a.mp3\";","export default __webpack_public_path__ + \"static/media/bg.81cfa304.mp3\";","export default __webpack_public_path__ + \"static/media/warp.1f9bec85.mp3\";","export default __webpack_public_path__ + \"static/media/click.db461987.mp3\";","export default __webpack_public_path__ + \"static/media/explosion.615cfd43.mp3\";","import zapAudio from './laser.mp3'\nimport engineAudio from './engine.mp3'\nimport engine2Audio from './engine2.mp3'\nimport bgAudio from './bg.mp3'\nimport warpAudio from './warp.mp3'\nimport clickAudio from './click.mp3'\nimport explosionAudio from './explosion.mp3'\n\nconst mp3 = { explosion: explosionAudio }\n\nconst zap = new Audio(zapAudio)\nconst engine = new Audio(engineAudio)\nconst engine2 = new Audio(engine2Audio)\nconst bg = new Audio(bgAudio)\nconst warp = new Audio(warpAudio)\nconst click = new Audio(clickAudio)\nconst explosion = new Audio(explosionAudio)\n\nexport { zap, engine, engine2, bg, warp, click, explosion, mp3 }\n","import * as THREE from 'three'\nimport { Curves } from 'three/examples/jsm/curves/CurveExtras'\nimport { addEffect } from '@react-three/fiber'\nimport create from 'zustand'\nimport * as audio from './audio'\n\nclass CustomSinCurve extends THREE.Curve {\n\tconstructor( scale = 1, angle = 7 * Math.PI / 4 ) {\n\t\tsuper();\n\t\tthis.scale = scale;\n    this.angle = angle;\n\t}\n\n\tgetPoint( t, optionalTarget = new THREE.Vector3() ) {\n\t\tconst tx = t * 4 - 1.5;\n\t\tconst ty = Math.sin( 1 * Math.PI * t );\n\t\tconst tz = 0;\n\n    var axis = new THREE.Vector3( 0, 1, 0 );\n    var angle = this.angle;\n\n\t\treturn optionalTarget.set( tx, ty, tz ).applyAxisAngle( axis, angle ).multiplyScalar( this.scale );\n\t}\n}\n\nlet guid = 1\n\nconst text2 = [['Work Experience'], ['Cornerstone Resources Credit Union League', '2016-2017: They put a lot of trust in an 18-19 year old'], ['Full Stack: Worked in VBA and Ruby on Rails'],\n['S5 Stratos - Software Engineer', 'Nowadays, 2017 - 2022'], ['Worked in a lot of things'], ['Mainly React, Java, and lots of database work'], ['It was a small team for a while so', 'We wore lots of hats'], \n['Lazy.com', 'My full-stack work on the side'], [\"It's a little Mark Cuban backed website\"]];\nconst text3 = [['Cool Things'], ['Runner-Up Riot Games API Challenge 2017', 'I made a React app and it took 2nd'], ['Flappy Doge for Android', 'I was proud of this getting popular in high school']];\nconst text4 = [['Education'], ['High School', 'Had a 4.15 GPA... I think that is good'], ['Collin College', '2016-2018: Associates Degree', 'Also was a member of the student government for my time there'], ['Western Governors University', '2019-Present: 14 credit hours from graduating', 'I work a lot so doing this part-time.']]\nconst text5 = [['Well anyways'], ['Thats it'], ['Did you get a lot of points?']]\nconst endTime = 70;\n\nconst useStore = create((set, get) => {\n  let spline = new Curves.GrannyKnot();\n  let track = new THREE.TubeBufferGeometry(spline, 250, 0.2, 10, true)\n  let cancelLaserTO = undefined\n  let cancelExplosionTO = undefined\n  const box = new THREE.Box3()\n\n  let track2 = new THREE.TubeGeometry(new CustomSinCurve(40 * 8), 250, 0.2, 10, false)\n  let track3 = new THREE.TubeGeometry(new CustomSinCurve(40 * 8, 7 * Math.PI / 6), 250, 0.2, 10, false)\n  let track4 = new THREE.TubeGeometry(new CustomSinCurve(40 * 8, 3 * Math.PI / 2), 250, 0.2, 10, false)\n  let track5 = new THREE.TubeGeometry(new CustomSinCurve(40 * 8), 250, 0.2, 10, false)\n  //  Math.floor(Math.random() * 3);\n  let hardMode = localStorage.getItem('hardMode') ? localStorage.getItem('hardMode')  === 'true' : true;\n  let text6 = [];\n  if (hardMode) {\n    text6 = [['Hey, you picked the hard mode'], ['You get some extra text', 'Ya know, more points'], ['Thanks for caring about the points'], ['Your name will be etched in the upper echilons'], ['...of stevenbarsam.com']]\n  }\n   \n  return {\n    sound: false,\n    camera: undefined,\n   \n    texts: [['Hello I am Steven Barsam'],['This is my website'],['Shoot the text like the Smash Bros Melee credits'], ['Aim by moving your mouse', 'Click to shoot'],['Skills', 'Like Things I Code In'], ['Unreal', 'Blueprints and C++'], ['Unity', 'Obsessed with LINQ'], ['React.js'], ['Java', 'And a lil Scala'], ['This was made in threejs'], ['Relational Databases', 'SQL, Postgres, Clickhouse, etc.'], ['Solidity and Huff (Assembly-ish)', \"I'm sorry\"], ['All the other languages I took classes in school in', 'C++, MIPS, etc']]\n      .concat(text2).concat(text3).concat(text4).concat(text5).concat(text6).map((x,i) => ({ trackNo: hardMode ? Math.floor(Math.random() * 5) : 0, index: i, isHit: false, text: x,  hit: new THREE.Vector3()})),\n    rocks: randomRocks(5, track, 150, 8, () => 1 + Math.random() * 2.5),\n    enemies: randomData(10, track, 20, 15, 1),\n    points: 0,\n    textsHit: [],\n    health: 100,\n    lasers: [],\n    explosions: [],\n\n    mutation: {\n      t: 0,\n      position: new THREE.Vector3(),\n      startTime: Date.now(),\n\n      track,\n      track2,\n      track3,\n      track4,\n      track5,\n      scale: 15,\n      fov: 70,\n      hits: false,\n      rings: randomRings(30, track),\n      particles: randomData(1500, track, 100, 1, () => 0.5 + Math.random() * 0.8),\n      looptime: 40 * 1000,\n      binormal: new THREE.Vector3(),\n      normal: new THREE.Vector3(),\n      clock: new THREE.Clock(false),\n      mouse: new THREE.Vector2(-250, 50),\n\n      // Re-usable objects\n      dummy: new THREE.Object3D(),\n      ray: new THREE.Ray(),\n      box: new THREE.Box3()\n    },\n\n    actions: {\n      reset() {\n        set({   points: 0,\n          textsHit: [],\n          health: 100,\n          lasers: [],\n          texts: [],\n          explosions: [],\n           mutation: {\n          position: new THREE.Vector3(),\n          startTime: Date.now(),\n    \n          track,\n          track2,\n          scale: 15,\n          fov: 70,\n          hits: false,\n          rings: randomRings(30, track),\n          particles: randomData(1500, track, 100, 1, () => 0.5 + Math.random() * 0.8),\n          looptime: 40 * 1000,\n          binormal: new THREE.Vector3(),\n          normal: new THREE.Vector3(),\n          clock: new THREE.Clock(false),\n          mouse: new THREE.Vector2(-250, 50),\n    \n          // Re-usable objects\n          dummy: new THREE.Object3D(),\n          ray: new THREE.Ray(),\n          box: new THREE.Box3()\n        },})\n      },\n      init(camera) {\n        const { mutation, actions } = get()\n\n        set({ camera })\n        mutation.clock.start()\n        actions.toggleSound(get().sound)\n\n        addEffect(() => {\n          const { rocks, enemies, texts, clock } = get()\n\n          const time = Date.now()\n          const t = (mutation.t = ((time - mutation.startTime) % mutation.looptime) / mutation.looptime)\n          mutation.position = track.parameters.path.getPointAt(t)\n          mutation.position.multiplyScalar(mutation.scale)\n\n          // test for wormhole/warp\n          let warping = false\n          if (t > 0.3 && t < 0.4) {\n            if (!warping) {\n              warping = true\n              playAudio(audio.warp)\n            }\n          } else if (t > 0.5) warping = false\n\n          // test for hits\n          const r = texts.filter(actions.test)\n          //const e = enemies.filter(actions.test)\n          const a = r\n          const previous = mutation.hits\n          mutation.hits = a.length\n          if (previous === 0 && mutation.hits) playAudio(audio.click)\n          const lasers = get().lasers\n          if (mutation.hits && lasers.length && time - lasers[lasers.length - 1] < 100) {\n            const updates = a.map((data) => ({ time: Date.now(), ...data }))\n            set((state) => ({ explosions: [...state.explosions, ...updates] }))\n            clearTimeout(cancelExplosionTO)\n            cancelExplosionTO = setTimeout(() => set((state) => ({ explosions: state.explosions.filter(({ time }) => Date.now() - time <= 1000) })), 1000)\n            const indexes = r.map(x => x.index);\n            set((state) => ({\n              points: state.points + r.length * (hardMode ? 300 : 100),\n              //textsHit: state.textsHit.concat(indexes),\n              texts: state.texts.map((rock) => ({...rock, isHit: indexes.indexOf(rock.index) > -1 ? true : rock.isHit}))\n              //rocks: state.rocks.map((rock) => ({...rock, isHit: r.guid == rock.guid ? true : rock.isHit})),\n              //enemies: state.enemies.filter((enemy) => !e.find((e) => e.guid === enemy.guid))\n            }))\n          }\n          //if (a.some(data => data.distance < 15)) set(state => ({ health: state.health - 1 }))\n        })\n      },\n      shoot() {\n        set((state) => ({ lasers: [...state.lasers, Date.now()] }))\n        clearTimeout(cancelLaserTO)\n        cancelLaserTO = setTimeout(() => set((state) => ({ lasers: state.lasers.filter((t) => Date.now() - t <= 1000) })), 1000)\n        playAudio(audio.zap, 0.5)\n      },\n      toggleSound(sound = !get().sound) {\n        set({ sound })\n        playAudio(audio.engine, 1, true)\n        playAudio(audio.engine2, 0.3, true)\n        playAudio(audio.bg, 1, true)\n      },\n      updateMouse({ clientX: x, clientY: y }) {\n        get().mutation.mouse.set(x - window.innerWidth / 2, y - window.innerHeight / 2)\n      },\n      setBox(data) {\n        const {index, box, posi} = data;\n        const { texts } = get();\n        if (texts[index] && box) {\n          texts[index].box = box;\n          texts[index].posi = posi\n        }\n        set(texts)\n      },\n      setPosi(data) {\n        const {index, posi} = data;\n        const { texts } = get();\n        if (texts[index] && posi) {\n          texts[index].posi = posi\n        }\n        set(texts)\n      },\n      test(data) {\n        //console.log(data)\n        if (data.box && !data.isHit) {\n          data.hit.set(10000, 10000, 10000)\n          const result = get().mutation.ray.intersectBox(data.box, data.hit)\n          data.distance = get().mutation.ray.origin.distanceTo(data.hit)\n          return result\n        }\n        /*\n        box.min.copy(data.offset)\n        box.max.copy(data.offset)\n        box.expandByScalar(data.size * data.scale)\n        data.hit.set(10000, 10000, 10000)\n        const result = get().mutation.ray.intersectBox(box, data.hit)\n        data.distance = get().mutation.ray.origin.distanceTo(data.hit)\n        return result*/\n      }\n    }\n  }\n})\n\nfunction randomRocks(count, track, radius, size, scale) {\n  return new Array(count).fill().map((x,i) => {\n    const t = rand\n    const rand = i / 10;\n    const pos = track.parameters.path.getPointAt(t)\n    pos.multiplyScalar(15)\n    const offset = pos\n      .clone()\n      .add(new THREE.Vector3(-radius + rand * radius * 2, -radius + rand * radius * 2, -radius + rand * radius * 2))\n    const speed = 0.1 + rand\n    return { isHit: false, index: i, guid: guid++, scale: typeof scale === 'function' ? scale() : scale, size, offset, pos, speed, radius, t, hit: new THREE.Vector3(), distance: 1000 }\n  })\n}\n\nfunction randomData(count, track, radius, size, scale) {\n  return new Array(count).fill().map(() => {\n    const t = Math.random()\n    const pos = track.parameters.path.getPointAt(t)\n    pos.multiplyScalar(15)\n    const offset = pos\n      .clone()\n      .add(new THREE.Vector3(-radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2))\n    const speed = 0.1 + Math.random()\n    return { guid: guid++, scale: typeof scale === 'function' ? scale() : scale, size, offset, pos, speed, radius, t, hit: new THREE.Vector3(), distance: 1000 }\n  })\n}\n\nfunction randomRings(count, track) {\n  let temp = []\n  let t = 0.4\n  for (let i = 0; i < count; i++) {\n    t += 0.003\n    const pos = track.parameters.path.getPointAt(t)\n    pos.multiplyScalar(15)\n    const segments = track.tangents.length\n    const pickt = t * segments\n    const pick = Math.floor(pickt)\n    const lookAt = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(15)\n    const matrix = new THREE.Matrix4().lookAt(pos, lookAt, track.binormals[pick])\n    temp.push([pos.toArray(), matrix])\n  }\n  return temp\n}\n\nfunction playAudio(audio, volume = 1, loop = false) {\n  if (useStore.getState().sound) {\n    audio.currentTime = 0\n    audio.volume = volume\n    audio.loop = loop\n    audio.play()\n  } else audio.pause()\n}\n\nexport default useStore\nexport { audio, playAudio }\n","import React, { useRef, useEffect } from 'react'\nimport useStore from '../store'\n\nexport default function Particles() {\n  const instancedMesh = useRef()\n  const { particles, dummy } = useStore((state) => state.mutation)\n\n  useEffect(() => {\n    particles.forEach((particle, i) => {\n      const { offset, scale } = particle\n      dummy.position.copy(offset)\n      dummy.scale.set(scale, scale, scale)\n      dummy.rotation.set(Math.sin(Math.random()) * Math.PI, Math.sin(Math.random()) * Math.PI, Math.cos(Math.random()) * Math.PI)\n      dummy.updateMatrix()\n      instancedMesh.current.setMatrixAt(i, dummy.matrix)\n    })\n    instancedMesh.current.instanceMatrix.needsUpdate = true\n  }, [])\n\n  return (\n    <instancedMesh ref={instancedMesh} args={[null, null, particles.length]} frustumCulled={false}>\n      <coneGeometry args={[2, 2, 3]} />\n      <meshStandardMaterial color=\"#606060\" />\n    </instancedMesh>\n  )\n}\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader, useFrame } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nexport default function Enemies() {\n  const enemies = useStore((state) => state.enemies)\n  return enemies.map((data, i) => <Drone key={i} data={data} />)\n}\n\nconst box = new THREE.Box3()\nbox.setFromCenterAndSize(new THREE.Vector3(0, 0, 1), new THREE.Vector3(3, 3, 3))\nconst glowMaterial = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightblue') })\nconst bodyMaterial = new THREE.MeshPhongMaterial({ color: new THREE.Color('black') })\n\nconst Drone = React.memo(({ data }) => {\n  const { clock } = useStore((state) => state.mutation)\n  const { nodes, materials } = useLoader(GLTFLoader,process.env.PUBLIC_URL +  '/drone.gltf')\n  const ref = useRef()\n\n  useFrame(() => {\n    const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\n    ref.current.position.copy(data.offset)\n    ref.current.rotation.set(r, r, r)\n  })\n\n  return (\n    <group ref={ref} scale={[5, 5, 5]}>\n      <mesh position={[0, 0, 50]} rotation={[Math.PI / 2, 0, 0]} material={glowMaterial}>\n        <cylinderBufferGeometry args={[0.25, 0.25, 100, 4]} />\n      </mesh>\n      <mesh name=\"Sphere_DroneGlowmat_0\" geometry={nodes.Sphere_DroneGlowmat_0.geometry} material={materials.DroneGlowmat} />\n      <mesh name=\"Sphere_Body_0\" geometry={nodes.Sphere_Body_0.geometry} material={bodyMaterial} />\n    </group>\n  )\n})\n","import * as THREE from 'three'\nimport React from 'react'\nimport useStore from '../store'\n\nconst geometry = new THREE.RingBufferGeometry(1, 1.01, 64)\nconst material = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightgreen'), side: THREE.DoubleSide })\n\nexport default function Rings() {\n  const { rings } = useStore(state => state.mutation)\n  return rings.map(([pos, matrix], i) => {\n    const f = (Math.sin(i / 10) * Math.PI) / 2\n    return (\n      <mesh\n        key={i}\n        position={pos}\n        scale={[30 + i * 5 * f, 30 + i * 5 * f, 30 + i * 5 * f]}\n        onUpdate={self => self.quaternion.setFromRotationMatrix(matrix)}\n        geometry={geometry}\n        material={material}\n      />\n    )\n  })\n}\n","import React from 'react'\nimport useStore from '../store'\n\nexport default function Track() {\n  const { scale, track } = useStore((state) => state.mutation)\n  return (\n    <mesh scale={[scale, scale, scale]} geometry={track}>\n      <meshBasicMaterial color=\"indianred\" />\n    </mesh>\n  )\n}\n","import * as THREE from 'three'\nimport React, { useRef, useState } from 'react'\nimport { useLoader, useFrame } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nimport TextSprite from '@seregpie/three.text-sprite';\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 40)\nconst lightgreen = new THREE.Color('lightgreen')\nconst hotpink = new THREE.Color('hotpink')\nconst laserMaterial = new THREE.MeshBasicMaterial({ color: lightgreen })\nconst crossMaterial = new THREE.MeshBasicMaterial({ color: hotpink, fog: false })\nconst position = new THREE.Vector3()\nconst direction = new THREE.Vector3()\n\nexport default function Texts() {\n    const gltf = useLoader(GLTFLoader, process.env.PUBLIC_URL + '/rock.gltf')\n    const rocks = useStore((state) => state.texts)\n    return rocks.map((data, i) => <Text trackNo={data.trackNo} posit={data.posi} isHit={data.isHit} t={data.text} index={i} />)\n  }\n\nconst Text = React.memo(({ nodes, materials, t, index, isHit, posit, trackNo }) => {\n  const mutation = useStore((state) => state.mutation)\n  const actions = useStore((state) => state.actions)\n  const texts = useStore((state) => state.texts)\n  const { clock, mouse, ray } = mutation\n  let posi = texts[index] && texts[index].posi ? texts[index].posi : -Math.abs(index / 2);\n  let offset = 0;\n  const test = useRef();\n  const test2 = useRef();\n  let hardMode = localStorage.getItem('hardMode') ? localStorage.getItem('hardMode')  === 'true' : true;\n\n  let text = new TextSprite({\n    alignment: 'left',\n    color: 'white',\n    fontFamily: '\"Smash\", Times, serif',\n    fontSize: 6,\n    //fontStyle: 'italic',\n    text: t.join('\\n'),\n  });\n\n  let xPos = -350;\n  let yPos = -200;\n  let track = mutation.track2;\n  switch(trackNo) {\n    case 0:\n        xPos = -350;\n        track = mutation.track2;\n        break;\n    case 1:\n        xPos = 500;\n        track = mutation.track3;\n        break;\n    case 2:\n        xPos = 0;\n        yPos = -250;\n        track = mutation.track4;\n        break;\n    case 3:\n        xPos = -300;\n        yPos = -150;\n        track = mutation.track5;\n        break;\n    case 4:\n        xPos = 450;\n        yPos = -80;\n        track = mutation.track3;\n        break;\n  }\n\n  useFrame(() => {\n    if (posi < .60) {\n      posi += (0.002 + (hardMode ? 0.0008 : 0));\n    } else {\n      posi += (0.0005 + (hardMode ? 0.0008 : 0));\n    }\n\n    // get the point at position\n    var point = track.parameters.path.getPointAt(posi);\n    test.current.position.copy(point);\n    test.current.visible = true;\n\n    if (posi > 0 && posi < 1) {\n        actions.setBox({ index, posi, box: new THREE.Box3().setFromObject(test.current)})\n    } else {\n        actions.setPosi({ index, posi })\n    }\n\n    if (texts[index] && texts[index].isHit) {\n        text.color = 'red';\n    } else {\n        text.color = 'white';\n    }\n  })\n\n  return (\n    <group>\n      <group name=\"text\" >\n        {/*<mesh  position={[xPos, yPos, -400]} geometry={track} >\n          <meshBasicMaterial color=\"blue\" />\n  </mesh>*/}\n  </group>\n      <group ref={test}>\n        <mesh  ref={test2} position={[xPos, yPos , -400]}  renderOrder={1000} material={crossMaterial}>\n          <primitive  scale={[1,1,1]} object={text}  />\n        </mesh>\n      </group>\n    </group>\n  )\n});\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader, useFrame } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nimport TextSprite from '@seregpie/three.text-sprite';\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 40)\nconst lightgreen = new THREE.Color('lightgreen')\nconst hotpink = new THREE.Color('hotpink')\nconst laserMaterial = new THREE.MeshBasicMaterial({ color: lightgreen })\nconst crossMaterial = new THREE.MeshBasicMaterial({ color: hotpink, fog: false })\nconst position = new THREE.Vector3()\nconst direction = new THREE.Vector3()\n\nexport default function Ship() {\n  const { nodes } = useLoader(GLTFLoader, process.env.PUBLIC_URL + '/ship.gltf')\n  const mutation = useStore((state) => state.mutation)\n  const { clock, mouse, ray } = mutation\n  const lasers = useStore((state) => state.lasers)\n  const main = useRef()\n  const laserGroup = useRef()\n  const laserLight = useRef()\n  const exhaust = useRef()\n  const cross = useRef()\n  const target = useRef()\n  const test = useRef()\n  let posi = 0;\n\n  useFrame(() => {\n    main.current.position.z = Math.sin(clock.getElapsedTime() * 40) * Math.PI * 0.2\n    main.current.rotation.z += (mouse.x / 500 - main.current.rotation.z) * 0.2\n    main.current.rotation.x += (-mouse.y / 500 - main.current.rotation.x) * 0.2\n    main.current.rotation.y += (-mouse.x / 500 - main.current.rotation.y) * 0.2\n    main.current.position.x += (mouse.x / 10 - main.current.position.x) * 0.2\n    main.current.position.y += (25 + -mouse.y / 10 - main.current.position.y) * 0.2\n    //exhaust.current.scale.x = 1 + Math.sin(clock.getElapsedTime() * 200)\n    //exhaust.current.scale.y = 1 + Math.sin(clock.getElapsedTime() * 200)\n    for (let i = 0; i < lasers.length; i++) {\n      const group = laserGroup.current.children[i]\n      group.position.z -= 20\n    }\n    //laserLight.current.intensity += ((lasers.length && Date.now() - lasers[lasers.length - 1] < 100 ? 20 : 0) - laserLight.current.intensity) * 0.3\n\n    // Get ships orientation and save it to the stores ray\n    main.current.getWorldPosition(position)\n    main.current.getWorldDirection(direction)\n    ray.origin.copy(position)\n    ray.direction.copy(direction.negate())\n\n    // ...\n    crossMaterial.color = mutation.hits ? lightgreen : hotpink\n    cross.current.visible = !mutation.hits\n    target.current.visible = !!mutation.hits\n\n    if (posi < .60) {\n      posi += 0.002;\n    } else {\n      posi += 0.0005;\n    }\n\n    // get the point at position\n    var point = mutation.track2.parameters.path.getPointAt(posi);\n   // test.current.position.copy(point);\n   // test.current.visible = true;\n  })\n  // rotation={[Math.PI / 2, Math.PI / 4, 0]}\n  let text = new TextSprite({\n    alignment: 'left',\n    color: 'white',\n    fontFamily: '\"Smash\", Times, serif',\n    fontSize: 6,\n    fontStyle: 'italic',\n    text: [\n      'Twinkle, twinkle, little star,',\n      'How ' \n    ].join('\\n'),\n  });\n  return (\n    <group>\n    <group ref={main}>\n      <group scale={[3.5, 3.5, 3.5]}>\n        <group ref={cross} position={[0, 0, -300]} name=\"cross\">\n          <mesh renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[20, 2, 2]} />\n          </mesh>\n          <mesh renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[2, 20, 2]} />\n          </mesh>\n        </group>\n        <group ref={target} position={[0, 0, -300]} name=\"target\">\n          <mesh position={[0, 20, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[40, 2, 2]} />\n          </mesh>\n          <mesh position={[0, -20, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[40, 2, 2]} />\n          </mesh>\n          <mesh position={[20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[2, 40, 2]} />\n          </mesh>\n          <mesh position={[-20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxGeometry args={[2, 40, 2]} />\n          </mesh>\n        </group>\n        <pointLight ref={laserLight} position={[0, 0, -20]} distance={100} intensity={0} color=\"lightgreen\" />\n        <group ref={laserGroup}>\n          {lasers.map((t, i) => (\n            <group key={i}>\n              <mesh position={[-2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n              <mesh position={[2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n            </group>\n          ))}\n        </group>\n        {/*<group rotation={[Math.PI / 2, Math.PI, 0]}>\n          <mesh name=\"Renault_(S,_T1)_0\" geometry={nodes['Renault_(S,_T1)_0'].geometry}>\n            <meshStandardMaterial color=\"#070707\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_1\" geometry={nodes['Renault_(S,_T1)_1'].geometry}>\n            <meshStandardMaterial color=\"black\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_2\" geometry={nodes['Renault_(S,_T1)_2'].geometry}>\n            <meshStandardMaterial color=\"#070707\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_3\" geometry={nodes['Renault_(S,_T1)_3'].geometry}>\n            <meshBasicMaterial color=\"lightblue\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_4\" geometry={nodes['Renault_(S,_T1)_4'].geometry}>\n            <meshBasicMaterial color=\"white\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_5\" geometry={nodes['Renault_(S,_T1)_5'].geometry}>\n            <meshBasicMaterial color=\"teal\" />\n          </mesh>\n        </group>*/}\n      </group>\n      {/*<mesh ref={exhaust} scale={[1, 1, 30]} position={[0, 1, 30]}>\n        <dodecahedronBufferGeometry args={[1.5, 0]} />\n        <meshBasicMaterial color=\"lightblue\" />\n      </mesh>*/}\n    </group>\n    </group>\n  )\n}\n","import React, { useRef } from 'react'\nimport { useThree, useFrame } from '@react-three/fiber'\nimport useStore from '../store'\n\nlet offset = 0\nexport default function Rig({ children }) {\n  const group = useRef()\n  const rig = useRef()\n  const mutation = useStore((state) => state.mutation)\n  const { fov, scale, binormal, normal, track, mouse, track2, clock } = mutation\n  const { camera } = useThree()\n\n  useFrame(() => {\n    const t = mutation.t\n    const pos = mutation.position.clone()\n    const segments = track.tangents.length\n    const pickt = t * segments\n    const pick = Math.floor(pickt)\n    const pickNext = (pick + 1) % segments\n    binormal.subVectors(track.binormals[pickNext], track.binormals[pick])\n    binormal.multiplyScalar(pickt - pick).add(track.binormals[pick])\n    const dir = track.parameters.path.getTangentAt(t)\n    offset += (Math.max(15, 15 + -mouse.y / 20) - offset) * 0.05\n    normal.copy(binormal).cross(dir)\n    pos.add(normal.clone().multiplyScalar(offset))\n    camera.position.copy(pos)\n    const lookAt = track.parameters.path.getPointAt((t + 30 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\n    camera.matrix.lookAt(camera.position, lookAt, normal)\n    camera.quaternion.setFromRotationMatrix(camera.matrix)\n    camera.fov += ((t > 0.4 && t < 0.45 ? 120 : fov) - camera.fov) * 0.05\n    camera.updateProjectionMatrix()\n    const lightPos = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\n    group.current.position.copy(lightPos)\n    group.current.quaternion.setFromRotationMatrix(camera.matrix)\n  })\n\n  return (\n    <group ref={group}>\n      <pointLight distance={400} position={[0, 100, -420]} intensity={5} color=\"indianred\" />\n      <group ref={rig} position={[0, 0, -50]}>\n        {children}\n      </group>\n    </group>\n  )\n}\n","class WebGL {\n\n\tstatic isWebGLAvailable() {\n\n\t\ttry {\n\n\t\t\tconst canvas = document.createElement( 'canvas' );\n\t\t\treturn !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\n\n\t\t} catch ( e ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\tstatic isWebGL2Available() {\n\n\t\ttry {\n\n\t\t\tconst canvas = document.createElement( 'canvas' );\n\t\t\treturn !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\n\n\t\t} catch ( e ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\tstatic getWebGLErrorMessage() {\n\n\t\treturn this.getErrorMessage( 1 );\n\n\t}\n\n\tstatic getWebGL2ErrorMessage() {\n\n\t\treturn this.getErrorMessage( 2 );\n\n\t}\n\n\tstatic getErrorMessage( version ) {\n\n\t\tconst names = {\n\t\t\t1: 'WebGL',\n\t\t\t2: 'WebGL 2'\n\t\t};\n\n\t\tconst contexts = {\n\t\t\t1: window.WebGLRenderingContext,\n\t\t\t2: window.WebGL2RenderingContext\n\t\t};\n\n\t\tlet message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n\t\tconst element = document.createElement( 'div' );\n\t\telement.id = 'webglmessage';\n\t\telement.style.fontFamily = 'monospace';\n\t\telement.style.fontSize = '13px';\n\t\telement.style.fontWeight = 'normal';\n\t\telement.style.textAlign = 'center';\n\t\telement.style.background = '#fff';\n\t\telement.style.color = '#000';\n\t\telement.style.padding = '1.5em';\n\t\telement.style.width = '400px';\n\t\telement.style.margin = '5em auto 0';\n\n\t\tif ( contexts[ version ] ) {\n\n\t\t\tmessage = message.replace( '$0', 'graphics card' );\n\n\t\t} else {\n\n\t\t\tmessage = message.replace( '$0', 'browser' );\n\n\t\t}\n\n\t\tmessage = message.replace( '$1', names[ version ] );\n\n\t\telement.innerHTML = message;\n\n\t\treturn element;\n\n\t}\n\n}\n\nexport default WebGL;","import React, { useMemo, useRef, useEffect, useReducer, useState } from 'react'\nimport styled, { css, createGlobalStyle } from 'styled-components'\nimport { getLeaderboard, postToLeaderboard } from './helpers/database'\nimport useStore from './store'\nimport WebGl from './WebGl'\n\nexport default function Hud() {\n  const points = useStore((state) => state.points)\n  const health = useStore((state) => state.health)\n  const sound = useStore((state) => state.sound)\n  const toggle = useStore((state) => state.actions.toggleSound)\n  const actions = useStore((state) => state.actions);\n  const texts = useStore((state) => state.texts);\n  const [mid, setMid] = useState(<div/>);\n  const [scoreData, setScoreData] = useState();\n  const [name, setName] = useState('mynameis');\n\n  const seconds = useRef()\n  let minScore = -1;\n  if (scoreData && scoreData.length > 10) {\n    minScore = scoreData[scoreData.length - 1];\n  }\n\n  const getLeaderboardData = () => {\n    getLeaderboard().then(data => {\n      const finalData = new Array(10).fill({ name: '...', score: 0});\n      data.forEach((x,i) => finalData[i] = x);\n      setScoreData(finalData);\n    });\n  }\n\n  // useEffect(() => {\n  //   getLeaderboardData();\n  // }, [])\n\n  useEffect(() => {\n    const i = setInterval(() => {\n      if (texts[texts.length - 1] && texts[texts.length - 1].posi > 1 ) {\n        if (points > minScore) {\n          setMid('highScoreContent');\n        } else {\n          setMid('leaderboardContent');\n        }\n        clearInterval(i);\n      }\n    }, 1000);\n    return () => clearInterval(i)\n  }, [texts])\n  const score = useMemo(() => (points >= 1000 ? (points / 1000).toFixed(1) + 'K' : points), [points])\n\n  let warning = '';\n  if (!WebGl.isWebGLAvailable() ) {\n    // Initiate function or other initializations here\n    warning = \"Please enable hardware acceleration in your browser!\\n OR ELSE... the site won't work and I'll be sad :(\";\n  }\n\n  const turnHardMode = (currentMode) => {\n    localStorage.setItem('hardMode', !currentMode ? true : false);\n    location.reload();\n  };\n\n  let hardMode = localStorage.getItem('hardMode')  ? localStorage.getItem('hardMode')  === 'true' : true;\n\n  const submitHighScore = () => {\n    //postToLeaderboard(name, points).then(x => getLeaderboardData());\n    setMid('leaderboardContent');\n  };\n  const getStyle = (index) => {\n    let style = {};\n    switch (index) {\n      case 0:\n        style.color = 'rgb(239,0,0)';\n        break;\n      case 1:\n        style.color = '#F400F4';\n        break;\n      case 2:\n        style.color = '#00E001';\n        break;\n      case 3:\n        style.color = '#06BABA';\n        break;\n      case 4:\n        style.color = '#E5E500';\n        break;\n      default:\n        style.color = 'white';\n    }\n    return style;\n  };\n  return (\n    <div >\n      <UpperLeft onClick={() => toggle()}>\n        sound is {sound ? 'on' : 'off'}\n        <br />\n        click to turn {sound ? 'off' : 'on'}\n        <br />\n        <h3 \n          onClick={() => turnHardMode(hardMode)}\n          style={{ cursor: 'pointer'}}\n        >{hardMode ? 'Turn off Hard Mode?' : 'Turn on Hard Mode?'}</h3>\n      </UpperLeft>\n      <UpperRight>\n        <a target=\"_blank\" href=\"https://github.com/iamameme\">github</a>\n        <br/>\n        <a target=\"_blank\" href=\"https://www.linkedin.com/in/steven-barsam/\">linkedin</a>\n      </UpperRight>\n      {mid == 'leaderboardContent' && (\n        <Middle>\n          <h1>Leaderboard</h1>\n          <table>\n            {scoreData && scoreData.map((x,i) => (\n              <tr style={getStyle(i)}>\n                <td>{i + 1}</td>\n                <td>{x.name}</td>\n                <td style={{ textAlign: 'end' }}>{x.score}</td>\n              </tr>\n            ))}\n          </table>\n          <br></br>\n          <h2 className=\"button\" onClick={() => { location.reload()}}>Play Again?</h2>\n        </Middle>\n      )}\n      {mid == 'highScoreContent' && (\n        <Middle2>\n          <h1 style={{ lineHeight: 1 }}>New High Score!</h1>\n          <h2 style={{ textAlign: 'center'}}>{score}</h2>\n          <br></br>\n          <div style={{ display: 'flex', width: 680, margin: '0 auto'}}>\n            <h2 className=\"entername\">Type Name:</h2>\n            <input defaultValue={\"CLICKHERE\"} maxLength={9} onChange={(e) => setName(e.target.value.toUpperCase())} />\n          </div>\n          <h2 className=\"button\" style={{ marginTop: 100, fontSize: 24 }} onClick={() => submitHighScore()}>Submit High Score</h2>\n          <div style={{ marginTop: 40 }} className=\"buttondont button\" onClick={() => {\n            setMid('leaderboardContent')\n          }}>\n            <span>{\"or don't\"}</span>\n          </div>\n        </Middle2>\n      )}\n      <MiddleUpper>\n        {warning}\n      </MiddleUpper>\n      <LowerLeft>\n        {/*<h2 ref={seconds}>0.0</h2>*/}\n        <h1>{score}</h1>\n      </LowerLeft>\n      <MiddleLower>\n        \n      </MiddleLower>\n      <Global />\n      <LowerRight>\n        {'Note: Please enable hardware acceleration in your browser.'}\n      </LowerRight>\n    </div>\n  )\n}\n\nconst base = css`\n  font-family: 'Teko', sans-serif;\n  position: absolute;\n  text-transform: uppercase;\n  font-weight: 900;\n  font-variant-numeric: slashed-zero tabular-nums;\n  line-height: 1em;\n  pointer-events: none;\n  color: indianred;\n`\n\nconst Middle2 = styled.div`\n  ${base}\n  top: 140px;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  width: 800px;\n  text-align: center;\n  font-family: 'Pixel';\n  color: white;\n  font-size: 30px;\n  pointer-events: all;\n  & > h1 {\n    color: rgb(0 255 255);\n    text-shadow: 5px 5px indianred;\n    margin-bottom: 80px;\n  }\n  & * .entername {\n    font-family: Pixel;\n    font-size: 30px;\n    width: 340px;\n    color: yellow;\n  }\n  & * input {\n    color: white;\n    text-decoration: none;\n    background: transparent;\n    font-family: 'Pixel', sans-serif;\n    font-size: 30px;\n    border: none;\n    width: 300px;\n    height: 30px;\n    margin-left: 30px;\n    margin-top: 24px;\n    text-transform: uppercase;\n  }\n  *:focus {\n      outline: none;\n  }\n  & > .buttondont {\n    font-size: 14px;\n    margin-top: 40px;\n    width: 120px !important;\n    height: 64px;\n    line-height: 1.5;\n    margin-top: 40;\n  }\n  & > .button {\n    width: 330px;\n    border: 5px solid white;\n    padding: 20px;\n    border-radius: 50px;\n    cursor: pointer;\n    margin: 0 auto;\n  }\n  & > .button:hover {\n    background: lightgrey;\n  }\n  & * span {\n    top: -13px;\n    position: relative;\n  }\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst Middle = styled.div`\n  ${base}\n  top: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  width: 800px;\n  font-size: 2em;\n  pointer-events: all;\n  text-align: center;\n  font-family: Pixel;\n  & > h1 {\n    font-size: 52px;\n    color: rgb(0 255 255);\n    text-shadow: 5px 5px indianred;\n    margin-bottom: 70px;\n  }\n  & > table {\n    border-collapse: separate;\n    border-spacing: 12px;\n    font-family: Pixel;\n    width: 600px;\n    margin: 20px auto;\n  }\n  & > .button {\n    width: 220px;\n    border: 5px solid blue;\n    padding: 20px;\n    border-radius: 50px;\n    cursor: pointer;\n    margin: 0 auto;\n    font-size: 30px;\n    color: blue;\n  }\n  & > .button:hover {\n    background: #6262ff;\n  }\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst MiddleUpper = styled.div`\n  ${base}\n  top: 20px;\n  color: blue;\n  white-space: pre-wrap;\n  left: 22%;\n  font-size: 2em;\n  pointer-events: all;\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst MiddleLower = styled.div`\n  ${base}\n  bottom: -25px;\n  white-space: pre-wrap;\n  right: 10px;\n  font-size: 2em;\n  pointer-events: all;\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst UpperLeft = styled.div`\n  ${base}\n  top: 40px;\n  left: 50px;\n  font-size: 2em;\n  transform: skew(5deg, 5deg);\n  pointer-events: all;\n  cursor: pointer;\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst UpperRight = styled.div`\n  ${base}\n  text-align: right;\n  top: 40px;\n  right: 50px;\n  font-size: 2em;\n  transform: skew(-5deg, -5deg);\n  pointer-events: all;\n  cursor: pointer;\n  & > a {\n    color: indianred;\n    text-decoration: none;\n  }\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst LowerLeft = styled.div`\n  ${base}\n  bottom: 5px;\n  left: 50px;\n  transform: skew(-5deg, -5deg);\n  width: 200px;\n  & > h1 {\n    margin: 0;\n    font-size: 10em;\n    line-height: 1em;\n  }\n  & > h2 {\n    margin: 0;\n    font-size: 4em;\n    line-height: 1em;\n  }\n  @media only screen and (max-width: 900px) {\n    bottom: 30px;\n    & > h1 {\n      font-size: 6em !important;\n    }\n    & > h2 {\n      font-size: 3em !important;\n    }\n  }\n`\n\nconst LowerRight = styled.div`\n  ${base}\n  bottom: 70px;\n  right: 50px;\n  transform: skew(5deg, 5deg);\n  height: 40px;\n  width: 150px;\n  & > div {\n    height: 100%;\n    background: indianred;\n  }\n\n  @media only screen and (max-width: 900px) {\n    bottom: 50px;\n    height: 40px;\n    width: 150px;\n  }\n`\n\nconst Global = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body,\n  #root {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    user-select: none;\n    overflow: hidden;\n  }\n\n  #root {\n    overflow: auto;\n    padding: 0px;\n  }\n\n  body {\n    position: fixed;\n    overflow: hidden;\n    overscroll-behavior-y: none;\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;\n    color: black;\n    background: white;\n  }\n`\n","import * as THREE from 'three'\nimport React, { Suspense, useState, useEffect } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport Stars from './3d/Stars'\nimport Planets from './3d/Planets'\nimport Effects from './3d/Effects'\nimport Particles from './3d/Particles'\nimport Enemies from './3d/Enemies'\nimport Rocks from './3d/Rocks'\nimport Explosions from './3d/Explosions'\nimport Rings from './3d/Rings'\nimport Track from './3d/Track'\nimport Track2 from './3d/Track2'\nimport Text from './3d/Text'\nimport Ship from './3d/Ship'\nimport Rig from './3d/Rig'\nimport Hud from './Hud'\nimport useStore from './store'\n\nexport default function App() {\n  const { fov, track2, clock } = useStore((state) => state.mutation)\n  const texts = useStore((state) => state.texts);\n  const actions = useStore((state) => state.actions)\n  const [backgroundStyle, setStyle ] = useState(undefined);\n\n  useEffect(() => {\n    const i = setInterval(() => {\n      if (texts[texts.length - 1] && texts[texts.length - 1].posi > 1 ) {\n        setStyle({ background: 'rgba(0,0,0,.9)' });\n      }\n    }, 1000);\n    return () => clearInterval(i)\n  }, [texts])\n  \n  return (\n    <div style={backgroundStyle} onPointerMove={actions.updateMouse} onClick={actions.shoot}>\n      {!backgroundStyle && (\n        <Canvas\n          linear\n          mode=\"concurrent\"\n          dpr={[1, 1.5]}\n          gl={{ antialias: false }}\n          camera={{ position: [0, 0, 2000], near: 0.01, far: 10000, fov }}\n          onCreated={({ gl, camera }) => {\n            actions.init(camera)\n            gl.toneMapping = THREE.Uncharted2ToneMapping\n            gl.setClearColor(new THREE.Color('#020209'))\n        }}>\n        {/*<fog attach=\"fog\" args={['#070710', 100, 700]} />*/}\n        <ambientLight intensity={0.25} />\n        <Stars />\n        <Track />\n        <Particles />\n        <Rings />\n        <Suspense fallback={null}>\n          <Planets />\n          <Rig>\n          <Text />\n            <Ship />\n          </Rig>\n        </Suspense>\n        <Effects />\n      </Canvas>\n      )}\n      <Hud />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}